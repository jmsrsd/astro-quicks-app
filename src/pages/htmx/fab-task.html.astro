---
import taskIcon from "../../assets/task-icon.svg?raw";

const id = "htmx-fab-task";

const { props } = Astro;

const selected_id = props.selected_id;

const chatEndpointParams = new URLSearchParams();
chatEndpointParams.set("shown", "true");
chatEndpointParams.set("selected_id", id);

const selected = selected_id === id;

const chatEndpoint = selected
  ? undefined
  : `/htmx/card-chat.html?${chatEndpointParams.toString()}`;

const style: Record<string, string | number | null | undefined> = selected
  ? {}
  : props.style;

// if (selected === false && !!selected_id) {
//   style.transform = "translate(150%)";
//   style.opacity = 0;
//   style["z-index"] = -50;
//   style.position = "absolute";
// }

props.style = style;

const params = new URLSearchParams();

for (const key of Object.keys(props)) {
  params.set(key, props[key]);
}
---

<button
  {...props}
  id={id}
  class="tw-z-10 tw-gap-[14px] tw-items-center tw-h-[110px] tw-flex tw-flex-col tw-justify-end tw-w-[68px]"
  hx-get={chatEndpoint}
  hx-swap="outerHTML swap:300ms"
  hx-target="#htmx-card-chat"
  hx-trigger="click"
>
  <div
    class="tw-absolute tw-w-[68px] tw-h-[68px] tw-bottom-0 tw-rounded-full tw-bg-[#4f4f4f] -tw-z-10"
    style={{
      transform: !selected ? undefined : "translate(-12px)",
    }}
  >
  </div>
  <div
    class="tw-font-bold tw-text-sm tw-text-[#f2f2f2]"
    style={{
      transition: "all 300ms ease",
      transform: selected ? "scale(0%)" : "scale(100%)",
    }}
  >
    {`Task`}
  </div>
  <div
    class="tw-flex tw-flex-col tw-items-center tw-justify-center tw-rounded-full tw-bg-[#f2f2f2] tw-min-h-[68px] tw-min-w-[68px]"
  >
    <Fragment set:html={taskIcon} />
  </div>
</button>
